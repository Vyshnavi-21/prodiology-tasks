<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Stopwatch Web App</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #f0f0f0;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding-top: 100px;
    }

    .stopwatch {
      background: #fff;
      padding: 30px 40px;
      border-radius: 15px;
      box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
      text-align: center;
    }

    .display {
      font-size: 48px;
      margin-bottom: 20px;
      letter-spacing: 2px;
    }

    .buttons button {
      padding: 10px 18px;
      margin: 5px;
      font-size: 16px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      background-color: #007bff;
      color: #fff;
      transition: background 0.3s ease;
    }

    .buttons button:hover {
      background-color: #0056b3;
    }

    .lap-times {
      margin-top: 20px;
      text-align: left;
      max-height: 200px;
      overflow-y: auto;
    }

    .lap-times li {
      font-size: 16px;
      margin-bottom: 5px;
    }
  </style>
</head>
<body>

  <div class="stopwatch">
    <div class="display" id="display">00:00:00</div>
    <div class="buttons">
      <button onclick="startStopwatch()">Start</button>
      <button onclick="pauseStopwatch()">Pause</button>
      <button onclick="resetStopwatch()">Reset</button>
      <button onclick="recordLap()">Lap</button>
    </div>
    <ul class="lap-times" id="laps"></ul>
  </div>

  <script>
    let startTime = 0;
    let elapsedTime = 0;
    let timerInterval;
    let isRunning = false;

    function timeToString(time) {
      const date = new Date(time);
      const minutes = String(date.getUTCMinutes()).padStart(2, '0');
      const seconds = String(date.getUTCSeconds()).padStart(2, '0');
      const milliseconds = String(Math.floor(date.getUTCMilliseconds() / 10)).padStart(2, '0');
      return `${minutes}:${seconds}:${milliseconds}`;
    }

    function startStopwatch() {
      if (!isRunning) {
        startTime = Date.now() - elapsedTime;
        timerInterval = setInterval(() => {
          elapsedTime = Date.now() - startTime;
          document.getElementById("display").textContent = timeToString(elapsedTime);
        }, 10);
        isRunning = true;
      }
    }

    function pauseStopwatch() {
      clearInterval(timerInterval);
      isRunning = false;
    }

    function resetStopwatch() {
      clearInterval(timerInterval);
      elapsedTime = 0;
      isRunning = false;
      document.getElementById("display").textContent = "00:00:00";
      document.getElementById("laps").innerHTML = "";
    }

    function recordLap() {
      if (isRunning) {
        const lapTime = timeToString(elapsedTime);
        const lapItem = document.createElement("li");
        lapItem.textContent = `Lap ${document.getElementById("laps").children.length + 1}: ${lapTime}`;
        document.getElementById("laps").appendChild(lapItem);
      }
    }
  </script>

</body>
</html>
